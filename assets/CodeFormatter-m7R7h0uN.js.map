{"version":3,"file":"CodeFormatter-m7R7h0uN.js","sources":["../../node_modules/prismjs/components/prism-markup.js","../../node_modules/prismjs/components/prism-css.js","../../node_modules/prismjs/components/prism-javascript.js","../../node_modules/prismjs/components/prism-jsx.js","../../node_modules/prismjs/components/prism-typescript.js","../../node_modules/prismjs/components/prism-json.js","../../node_modules/prismjs/components/prism-python.js","../../node_modules/prismjs/components/prism-sql.js","../../node_modules/prismjs/components/prism-yaml.js","../../node_modules/prismjs/components/prism-markdown.js","../../node_modules/prismjs/plugins/line-numbers/prism-line-numbers.js","../../src/components/CodeFormatter.jsx"],"sourcesContent":["Prism.languages.markup = {\n\t'comment': {\n\t\tpattern: /<!--(?:(?!<!--)[\\s\\S])*?-->/,\n\t\tgreedy: true\n\t},\n\t'prolog': {\n\t\tpattern: /<\\?[\\s\\S]+?\\?>/,\n\t\tgreedy: true\n\t},\n\t'doctype': {\n\t\t// https://www.w3.org/TR/xml/#NT-doctypedecl\n\t\tpattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'internal-subset': {\n\t\t\t\tpattern: /(^[^\\[]*\\[)[\\s\\S]+(?=\\]>$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: null // see below\n\t\t\t},\n\t\t\t'string': {\n\t\t\t\tpattern: /\"[^\"]*\"|'[^']*'/,\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t'punctuation': /^<!|>$|[[\\]]/,\n\t\t\t'doctype-tag': /^DOCTYPE/i,\n\t\t\t'name': /[^\\s<>'\"]+/\n\t\t}\n\t},\n\t'cdata': {\n\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\tgreedy: true\n\t},\n\t'tag': {\n\t\tpattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'tag': {\n\t\t\t\tpattern: /^<\\/?[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^<\\/?/,\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'special-attr': [],\n\t\t\t'attr-value': {\n\t\t\t\tpattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /^=/,\n\t\t\t\t\t\t\talias: 'attr-equals'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /^(\\s*)[\"']|[\"']$/,\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t'punctuation': /\\/?>/,\n\t\t\t'attr-name': {\n\t\t\t\tpattern: /[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t},\n\t'entity': [\n\t\t{\n\t\t\tpattern: /&[\\da-z]{1,8};/i,\n\t\t\talias: 'named-entity'\n\t\t},\n\t\t/&#x?[\\da-f]{1,8};/i\n\t]\n};\n\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] =\n\tPrism.languages.markup['entity'];\nPrism.languages.markup['doctype'].inside['internal-subset'].inside = Prism.languages.markup;\n\n// Plugin to make entity title show the real entity, idea by Roman Komarov\nPrism.hooks.add('wrap', function (env) {\n\n\tif (env.type === 'entity') {\n\t\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');\n\t}\n});\n\nObject.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n\t/**\n\t * Adds an inlined language to markup.\n\t *\n\t * An example of an inlined language is CSS with `<style>` tags.\n\t *\n\t * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addInlined('style', 'css');\n\t */\n\tvalue: function addInlined(tagName, lang) {\n\t\tvar includedCdataInside = {};\n\t\tincludedCdataInside['language-' + lang] = {\n\t\t\tpattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\t\tincludedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n\n\t\tvar inside = {\n\t\t\t'included-cdata': {\n\t\t\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\t\t\tinside: includedCdataInside\n\t\t\t}\n\t\t};\n\t\tinside['language-' + lang] = {\n\t\t\tpattern: /[\\s\\S]+/,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\n\t\tvar def = {};\n\t\tdef[tagName] = {\n\t\t\tpattern: RegExp(/(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function () { return tagName; }), 'i'),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: inside\n\t\t};\n\n\t\tPrism.languages.insertBefore('markup', 'cdata', def);\n\t}\n});\nObject.defineProperty(Prism.languages.markup.tag, 'addAttribute', {\n\t/**\n\t * Adds an pattern to highlight languages embedded in HTML attributes.\n\t *\n\t * An example of an inlined language is CSS with `style` attributes.\n\t *\n\t * @param {string} attrName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addAttribute('style', 'css');\n\t */\n\tvalue: function (attrName, lang) {\n\t\tPrism.languages.markup.tag.inside['special-attr'].push({\n\t\t\tpattern: RegExp(\n\t\t\t\t/(^|[\"'\\s])/.source + '(?:' + attrName + ')' + /\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))/.source,\n\t\t\t\t'i'\n\t\t\t),\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'attr-name': /^[^\\s=]+/,\n\t\t\t\t'attr-value': {\n\t\t\t\t\tpattern: /=[\\s\\S]+/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'value': {\n\t\t\t\t\t\t\tpattern: /(^=\\s*([\"']|(?![\"'])))\\S[\\s\\S]*(?=\\2$)/,\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\talias: [lang, 'language-' + lang],\n\t\t\t\t\t\t\tinside: Prism.languages[lang]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpattern: /^=/,\n\t\t\t\t\t\t\t\talias: 'attr-equals'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t/\"|'/\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n});\n\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\n\nPrism.languages.xml = Prism.languages.extend('markup', {});\nPrism.languages.ssml = Prism.languages.xml;\nPrism.languages.atom = Prism.languages.xml;\nPrism.languages.rss = Prism.languages.xml;\n","(function (Prism) {\n\n\tvar string = /(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/;\n\n\tPrism.languages.css = {\n\t\t'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n\t\t'atrule': {\n\t\t\tpattern: RegExp('@[\\\\w-](?:' + /[^;{\\s\"']|\\s+(?!\\s)/.source + '|' + string.source + ')*?' + /(?:;|(?=\\s*\\{))/.source),\n\t\t\tinside: {\n\t\t\t\t'rule': /^@[\\w-]+/,\n\t\t\t\t'selector-function-argument': {\n\t\t\t\t\tpattern: /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'selector'\n\t\t\t\t},\n\t\t\t\t'keyword': {\n\t\t\t\t\tpattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t}\n\t\t\t\t// See rest below\n\t\t\t}\n\t\t},\n\t\t'url': {\n\t\t\t// https://drafts.csswg.org/css-values-3/#urls\n\t\t\tpattern: RegExp('\\\\burl\\\\((?:' + string.source + '|' + /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source + ')\\\\)', 'i'),\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'function': /^url/i,\n\t\t\t\t'punctuation': /^\\(|\\)$/,\n\t\t\t\t'string': {\n\t\t\t\t\tpattern: RegExp('^' + string.source + '$'),\n\t\t\t\t\talias: 'url'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'selector': {\n\t\t\tpattern: RegExp('(^|[{}\\\\s])[^{}\\\\s](?:[^{};\"\\'\\\\s]|\\\\s+(?![\\\\s{])|' + string.source + ')*(?=\\\\s*\\\\{)'),\n\t\t\tlookbehind: true\n\t\t},\n\t\t'string': {\n\t\t\tpattern: string,\n\t\t\tgreedy: true\n\t\t},\n\t\t'property': {\n\t\t\tpattern: /(^|[^-\\w\\xA0-\\uFFFF])(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'important': /!important\\b/i,\n\t\t'function': {\n\t\t\tpattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\\()/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'punctuation': /[(){};:,]/\n\t};\n\n\tPrism.languages.css['atrule'].inside.rest = Prism.languages.css;\n\n\tvar markup = Prism.languages.markup;\n\tif (markup) {\n\t\tmarkup.tag.addInlined('style', 'css');\n\t\tmarkup.tag.addAttribute('style', 'css');\n\t}\n\n}(Prism));\n","Prism.languages.javascript = Prism.languages.extend('clike', {\n\t'class-name': [\n\t\tPrism.languages.clike['class-name'],\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:constructor|prototype))/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'keyword': [\n\t\t{\n\t\t\tpattern: /((?:^|\\})\\s*)catch\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t],\n\t// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n\t'function': /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n\t'number': {\n\t\tpattern: RegExp(\n\t\t\t/(^|[^\\w$])/.source +\n\t\t\t'(?:' +\n\t\t\t(\n\t\t\t\t// constant\n\t\t\t\t/NaN|Infinity/.source +\n\t\t\t\t'|' +\n\t\t\t\t// binary integer\n\t\t\t\t/0[bB][01]+(?:_[01]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// octal integer\n\t\t\t\t/0[oO][0-7]+(?:_[0-7]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// hexadecimal integer\n\t\t\t\t/0[xX][\\dA-Fa-f]+(?:_[\\dA-Fa-f]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// decimal bigint\n\t\t\t\t/\\d+(?:_\\d+)*n/.source +\n\t\t\t\t'|' +\n\t\t\t\t// decimal number (integer or float) but no bigint\n\t\t\t\t/(?:\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[Ee][+-]?\\d+(?:_\\d+)*)?/.source\n\t\t\t) +\n\t\t\t')' +\n\t\t\t/(?![\\w$])/.source\n\t\t),\n\t\tlookbehind: true\n\t},\n\t'operator': /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n});\n\nPrism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|extends|implements|instanceof|interface|new)\\s+)[\\w.\\\\]+/;\n\nPrism.languages.insertBefore('javascript', 'keyword', {\n\t'regex': {\n\t\tpattern: RegExp(\n\t\t\t// lookbehind\n\t\t\t// eslint-disable-next-line regexp/no-dupe-characters-character-class\n\t\t\t/((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)/.source +\n\t\t\t// Regex pattern:\n\t\t\t// There are 2 regex patterns here. The RegExp set notation proposal added support for nested character\n\t\t\t// classes if the `v` flag is present. Unfortunately, nested CCs are both context-free and incompatible\n\t\t\t// with the only syntax, so we have to define 2 different regex patterns.\n\t\t\t/\\//.source +\n\t\t\t'(?:' +\n\t\t\t/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}/.source +\n\t\t\t'|' +\n\t\t\t// `v` flag syntax. This supports 3 levels of nested character classes.\n\t\t\t/(?:\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.)*\\])*\\])*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}v[dgimyus]{0,7}/.source +\n\t\t\t')' +\n\t\t\t// lookahead\n\t\t\t/(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/.source\n\t\t),\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'regex-source': {\n\t\t\t\tpattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'language-regex',\n\t\t\t\tinside: Prism.languages.regex\n\t\t\t},\n\t\t\t'regex-delimiter': /^\\/|\\/$/,\n\t\t\t'regex-flags': /^[a-z]+$/,\n\t\t}\n\t},\n\t// This must be declared before keyword because we use \"function\" inside the look-forward\n\t'function-variable': {\n\t\tpattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n\t\talias: 'function'\n\t},\n\t'parameter': [\n\t\t{\n\t\t\tpattern: /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t}\n\t],\n\t'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\n\nPrism.languages.insertBefore('javascript', 'string', {\n\t'hashbang': {\n\t\tpattern: /^#!.*/,\n\t\tgreedy: true,\n\t\talias: 'comment'\n\t},\n\t'template-string': {\n\t\tpattern: /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'template-punctuation': {\n\t\t\t\tpattern: /^`|`$/,\n\t\t\t\talias: 'string'\n\t\t\t},\n\t\t\t'interpolation': {\n\t\t\t\tpattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation-punctuation': {\n\t\t\t\t\t\tpattern: /^\\$\\{|\\}$/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': /[\\s\\S]+/\n\t\t}\n\t},\n\t'string-property': {\n\t\tpattern: /((?:^|[,{])[ \\t]*)([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2(?=\\s*:)/m,\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\talias: 'property'\n\t}\n});\n\nPrism.languages.insertBefore('javascript', 'operator', {\n\t'literal-property': {\n\t\tpattern: /((?:^|[,{])[ \\t]*)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/m,\n\t\tlookbehind: true,\n\t\talias: 'property'\n\t},\n});\n\nif (Prism.languages.markup) {\n\tPrism.languages.markup.tag.addInlined('script', 'javascript');\n\n\t// add attribute support for all DOM events.\n\t// https://developer.mozilla.org/en-US/docs/Web/Events#Standard_events\n\tPrism.languages.markup.tag.addAttribute(\n\t\t/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source,\n\t\t'javascript'\n\t);\n}\n\nPrism.languages.js = Prism.languages.javascript;\n","(function (Prism) {\n\n\tvar javascript = Prism.util.clone(Prism.languages.javascript);\n\n\tvar space = /(?:\\s|\\/\\/.*(?!.)|\\/\\*(?:[^*]|\\*(?!\\/))\\*\\/)/.source;\n\tvar braces = /(?:\\{(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])*\\})/.source;\n\tvar spread = /(?:\\{<S>*\\.{3}(?:[^{}]|<BRACES>)*\\})/.source;\n\n\t/**\n\t * @param {string} source\n\t * @param {string} [flags]\n\t */\n\tfunction re(source, flags) {\n\t\tsource = source\n\t\t\t.replace(/<S>/g, function () { return space; })\n\t\t\t.replace(/<BRACES>/g, function () { return braces; })\n\t\t\t.replace(/<SPREAD>/g, function () { return spread; });\n\t\treturn RegExp(source, flags);\n\t}\n\n\tspread = re(spread).source;\n\n\n\tPrism.languages.jsx = Prism.languages.extend('markup', javascript);\n\tPrism.languages.jsx.tag.pattern = re(\n\t\t/<\\/?(?:[\\w.:-]+(?:<S>+(?:[\\w.:$-]+(?:=(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s{'\"/>=]+|<BRACES>))?|<SPREAD>))*<S>*\\/?)?>/.source\n\t);\n\n\tPrism.languages.jsx.tag.inside['tag'].pattern = /^<\\/?[^\\s>\\/]*/;\n\tPrism.languages.jsx.tag.inside['attr-value'].pattern = /=(?!\\{)(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s'\">]+)/;\n\tPrism.languages.jsx.tag.inside['tag'].inside['class-name'] = /^[A-Z]\\w*(?:\\.[A-Z]\\w*)*$/;\n\tPrism.languages.jsx.tag.inside['comment'] = javascript['comment'];\n\n\tPrism.languages.insertBefore('inside', 'attr-name', {\n\t\t'spread': {\n\t\t\tpattern: re(/<SPREAD>/.source),\n\t\t\tinside: Prism.languages.jsx\n\t\t}\n\t}, Prism.languages.jsx.tag);\n\n\tPrism.languages.insertBefore('inside', 'special-attr', {\n\t\t'script': {\n\t\t\t// Allow for two levels of nesting\n\t\t\tpattern: re(/=<BRACES>/.source),\n\t\t\talias: 'language-javascript',\n\t\t\tinside: {\n\t\t\t\t'script-punctuation': {\n\t\t\t\t\tpattern: /^=(?=\\{)/,\n\t\t\t\t\talias: 'punctuation'\n\t\t\t\t},\n\t\t\t\trest: Prism.languages.jsx\n\t\t\t},\n\t\t}\n\t}, Prism.languages.jsx.tag);\n\n\t// The following will handle plain text inside tags\n\tvar stringifyToken = function (token) {\n\t\tif (!token) {\n\t\t\treturn '';\n\t\t}\n\t\tif (typeof token === 'string') {\n\t\t\treturn token;\n\t\t}\n\t\tif (typeof token.content === 'string') {\n\t\t\treturn token.content;\n\t\t}\n\t\treturn token.content.map(stringifyToken).join('');\n\t};\n\n\tvar walkTokens = function (tokens) {\n\t\tvar openedTags = [];\n\t\tfor (var i = 0; i < tokens.length; i++) {\n\t\t\tvar token = tokens[i];\n\t\t\tvar notTagNorBrace = false;\n\n\t\t\tif (typeof token !== 'string') {\n\t\t\t\tif (token.type === 'tag' && token.content[0] && token.content[0].type === 'tag') {\n\t\t\t\t\t// We found a tag, now find its kind\n\n\t\t\t\t\tif (token.content[0].content[0].content === '</') {\n\t\t\t\t\t\t// Closing tag\n\t\t\t\t\t\tif (openedTags.length > 0 && openedTags[openedTags.length - 1].tagName === stringifyToken(token.content[0].content[1])) {\n\t\t\t\t\t\t\t// Pop matching opening tag\n\t\t\t\t\t\t\topenedTags.pop();\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (token.content[token.content.length - 1].content === '/>') {\n\t\t\t\t\t\t\t// Autoclosed tag, ignore\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Opening tag\n\t\t\t\t\t\t\topenedTags.push({\n\t\t\t\t\t\t\t\ttagName: stringifyToken(token.content[0].content[1]),\n\t\t\t\t\t\t\t\topenedBraces: 0\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (openedTags.length > 0 && token.type === 'punctuation' && token.content === '{') {\n\n\t\t\t\t\t// Here we might have entered a JSX context inside a tag\n\t\t\t\t\topenedTags[openedTags.length - 1].openedBraces++;\n\n\t\t\t\t} else if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces > 0 && token.type === 'punctuation' && token.content === '}') {\n\n\t\t\t\t\t// Here we might have left a JSX context inside a tag\n\t\t\t\t\topenedTags[openedTags.length - 1].openedBraces--;\n\n\t\t\t\t} else {\n\t\t\t\t\tnotTagNorBrace = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (notTagNorBrace || typeof token === 'string') {\n\t\t\t\tif (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces === 0) {\n\t\t\t\t\t// Here we are inside a tag, and not inside a JSX context.\n\t\t\t\t\t// That's plain text: drop any tokens matched.\n\t\t\t\t\tvar plainText = stringifyToken(token);\n\n\t\t\t\t\t// And merge text with adjacent text\n\t\t\t\t\tif (i < tokens.length - 1 && (typeof tokens[i + 1] === 'string' || tokens[i + 1].type === 'plain-text')) {\n\t\t\t\t\t\tplainText += stringifyToken(tokens[i + 1]);\n\t\t\t\t\t\ttokens.splice(i + 1, 1);\n\t\t\t\t\t}\n\t\t\t\t\tif (i > 0 && (typeof tokens[i - 1] === 'string' || tokens[i - 1].type === 'plain-text')) {\n\t\t\t\t\t\tplainText = stringifyToken(tokens[i - 1]) + plainText;\n\t\t\t\t\t\ttokens.splice(i - 1, 1);\n\t\t\t\t\t\ti--;\n\t\t\t\t\t}\n\n\t\t\t\t\ttokens[i] = new Prism.Token('plain-text', plainText, null, plainText);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (token.content && typeof token.content !== 'string') {\n\t\t\t\twalkTokens(token.content);\n\t\t\t}\n\t\t}\n\t};\n\n\tPrism.hooks.add('after-tokenize', function (env) {\n\t\tif (env.language !== 'jsx' && env.language !== 'tsx') {\n\t\t\treturn;\n\t\t}\n\t\twalkTokens(env.tokens);\n\t});\n\n}(Prism));\n","(function (Prism) {\n\n\tPrism.languages.typescript = Prism.languages.extend('javascript', {\n\t\t'class-name': {\n\t\t\tpattern: /(\\b(?:class|extends|implements|instanceof|interface|new|type)\\s+)(?!keyof\\b)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?:\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>)?/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: null // see below\n\t\t},\n\t\t'builtin': /\\b(?:Array|Function|Promise|any|boolean|console|never|number|string|symbol|unknown)\\b/,\n\t});\n\n\t// The keywords TypeScript adds to JavaScript\n\tPrism.languages.typescript.keyword.push(\n\t\t/\\b(?:abstract|declare|is|keyof|readonly|require)\\b/,\n\t\t// keywords that have to be followed by an identifier\n\t\t/\\b(?:asserts|infer|interface|module|namespace|type)\\b(?=\\s*(?:[{_$a-zA-Z\\xA0-\\uFFFF]|$))/,\n\t\t// This is for `import type *, {}`\n\t\t/\\btype\\b(?=\\s*(?:[\\{*]|$))/\n\t);\n\n\t// doesn't work with TS because TS is too complex\n\tdelete Prism.languages.typescript['parameter'];\n\tdelete Prism.languages.typescript['literal-property'];\n\n\t// a version of typescript specifically for highlighting types\n\tvar typeInside = Prism.languages.extend('typescript', {});\n\tdelete typeInside['class-name'];\n\n\tPrism.languages.typescript['class-name'].inside = typeInside;\n\n\tPrism.languages.insertBefore('typescript', 'function', {\n\t\t'decorator': {\n\t\t\tpattern: /@[$\\w\\xA0-\\uFFFF]+/,\n\t\t\tinside: {\n\t\t\t\t'at': {\n\t\t\t\t\tpattern: /^@/,\n\t\t\t\t\talias: 'operator'\n\t\t\t\t},\n\t\t\t\t'function': /^[\\s\\S]+/\n\t\t\t}\n\t\t},\n\t\t'generic-function': {\n\t\t\t// e.g. foo<T extends \"bar\" | \"baz\">( ...\n\t\t\tpattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>(?=\\s*\\()/,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'function': /^#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/,\n\t\t\t\t'generic': {\n\t\t\t\t\tpattern: /<[\\s\\S]+/, // everything after the first <\n\t\t\t\t\talias: 'class-name',\n\t\t\t\t\tinside: typeInside\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tPrism.languages.ts = Prism.languages.typescript;\n\n}(Prism));\n","// https://www.json.org/json-en.html\nPrism.languages.json = {\n\t'property': {\n\t\tpattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/,\n\t\tlookbehind: true,\n\t\tgreedy: true\n\t},\n\t'string': {\n\t\tpattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?!\\s*:)/,\n\t\tlookbehind: true,\n\t\tgreedy: true\n\t},\n\t'comment': {\n\t\tpattern: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n\t\tgreedy: true\n\t},\n\t'number': /-?\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n\t'punctuation': /[{}[\\],]/,\n\t'operator': /:/,\n\t'boolean': /\\b(?:false|true)\\b/,\n\t'null': {\n\t\tpattern: /\\bnull\\b/,\n\t\talias: 'keyword'\n\t}\n};\n\nPrism.languages.webmanifest = Prism.languages.json;\n","Prism.languages.python = {\n\t'comment': {\n\t\tpattern: /(^|[^\\\\])#.*/,\n\t\tlookbehind: true,\n\t\tgreedy: true\n\t},\n\t'string-interpolation': {\n\t\tpattern: /(?:f|fr|rf)(?:(\"\"\"|''')[\\s\\S]*?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2)/i,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'interpolation': {\n\t\t\t\t// \"{\" <expression> <optional \"!s\", \"!r\", or \"!a\"> <optional \":\" format specifier> \"}\"\n\t\t\t\tpattern: /((?:^|[^{])(?:\\{\\{)*)\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}])+\\})+\\})+\\}/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'format-spec': {\n\t\t\t\t\t\tpattern: /(:)[^:(){}]+(?=\\}$)/,\n\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t},\n\t\t\t\t\t'conversion-option': {\n\t\t\t\t\t\tpattern: /![sra](?=[:}]$)/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\trest: null\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': /[\\s\\S]+/\n\t\t}\n\t},\n\t'triple-quoted-string': {\n\t\tpattern: /(?:[rub]|br|rb)?(\"\"\"|''')[\\s\\S]*?\\1/i,\n\t\tgreedy: true,\n\t\talias: 'string'\n\t},\n\t'string': {\n\t\tpattern: /(?:[rub]|br|rb)?(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/i,\n\t\tgreedy: true\n\t},\n\t'function': {\n\t\tpattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/g,\n\t\tlookbehind: true\n\t},\n\t'class-name': {\n\t\tpattern: /(\\bclass\\s+)\\w+/i,\n\t\tlookbehind: true\n\t},\n\t'decorator': {\n\t\tpattern: /(^[\\t ]*)@\\w+(?:\\.\\w+)*/m,\n\t\tlookbehind: true,\n\t\talias: ['annotation', 'punctuation'],\n\t\tinside: {\n\t\t\t'punctuation': /\\./\n\t\t}\n\t},\n\t'keyword': /\\b(?:_(?=\\s*:)|and|as|assert|async|await|break|case|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|match|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\\b/,\n\t'builtin': /\\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\\b/,\n\t'boolean': /\\b(?:False|None|True)\\b/,\n\t'number': /\\b0(?:b(?:_?[01])+|o(?:_?[0-7])+|x(?:_?[a-f0-9])+)\\b|(?:\\b\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\B\\.\\d+(?:_\\d+)*)(?:e[+-]?\\d+(?:_\\d+)*)?j?(?!\\w)/i,\n\t'operator': /[-+%=]=?|!=|:=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\n\t'punctuation': /[{}[\\];(),.:]/\n};\n\nPrism.languages.python['string-interpolation'].inside['interpolation'].inside.rest = Prism.languages.python;\n\nPrism.languages.py = Prism.languages.python;\n","Prism.languages.sql = {\n\t'comment': {\n\t\tpattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/|#).*)/,\n\t\tlookbehind: true\n\t},\n\t'variable': [\n\t\t{\n\t\t\tpattern: /@([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1/,\n\t\t\tgreedy: true\n\t\t},\n\t\t/@[\\w.$]+/\n\t],\n\t'string': {\n\t\tpattern: /(^|[^@\\\\])(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\]|\\2\\2)*\\2/,\n\t\tgreedy: true,\n\t\tlookbehind: true\n\t},\n\t'identifier': {\n\t\tpattern: /(^|[^@\\\\])`(?:\\\\[\\s\\S]|[^`\\\\]|``)*`/,\n\t\tgreedy: true,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'punctuation': /^`|`$/\n\t\t}\n\t},\n\t'function': /\\b(?:AVG|COUNT|FIRST|FORMAT|LAST|LCASE|LEN|MAX|MID|MIN|MOD|NOW|ROUND|SUM|UCASE)(?=\\s*\\()/i, // Should we highlight user defined functions too?\n\t'keyword': /\\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR(?:ACTER|SET)?|CHECK(?:POINT)?|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMNS?|COMMENT|COMMIT(?:TED)?|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS(?:TABLE)?|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|CYCLE|DATA(?:BASES?)?|DATE(?:TIME)?|DAY|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITERS?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE|ELSE(?:IF)?|ENABLE|ENCLOSED|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPED?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|HOUR|IDENTITY(?:COL|_INSERT)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTERVAL|INTO|INVOKER|ISOLATION|ITERATE|JOIN|KEYS?|KILL|LANGUAGE|LAST|LEAVE|LEFT|LEVEL|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|LOOP|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MINUTE|MODE|MODIFIES|MODIFY|MONTH|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL|NATURAL|NCHAR|NEXT|NO|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREPARE|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READS?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEAT(?:ABLE)?|REPLACE|REPLICATION|REQUIRE|RESIGNAL|RESTORE|RESTRICT|RETURN(?:ING|S)?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SECOND|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|SQL|START(?:ING)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED|TEXT(?:SIZE)?|THEN|TIME(?:STAMP)?|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNLOCK|UNPIVOT|UNSIGNED|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?|YEAR)\\b/i,\n\t'boolean': /\\b(?:FALSE|NULL|TRUE)\\b/i,\n\t'number': /\\b0x[\\da-f]+\\b|\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+\\b/i,\n\t'operator': /[-+*\\/=%^~]|&&?|\\|\\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\\b(?:AND|BETWEEN|DIV|ILIKE|IN|IS|LIKE|NOT|OR|REGEXP|RLIKE|SOUNDS LIKE|XOR)\\b/i,\n\t'punctuation': /[;[\\]()`,.]/\n};\n","(function (Prism) {\n\n\t// https://yaml.org/spec/1.2/spec.html#c-ns-anchor-property\n\t// https://yaml.org/spec/1.2/spec.html#c-ns-alias-node\n\tvar anchorOrAlias = /[*&][^\\s[\\]{},]+/;\n\t// https://yaml.org/spec/1.2/spec.html#c-ns-tag-property\n\tvar tag = /!(?:<[\\w\\-%#;/?:@&=+$,.!~*'()[\\]]+>|(?:[a-zA-Z\\d-]*!)?[\\w\\-%#;/?:@&=+$.~*'()]+)?/;\n\t// https://yaml.org/spec/1.2/spec.html#c-ns-properties(n,c)\n\tvar properties = '(?:' + tag.source + '(?:[ \\t]+' + anchorOrAlias.source + ')?|'\n\t\t+ anchorOrAlias.source + '(?:[ \\t]+' + tag.source + ')?)';\n\t// https://yaml.org/spec/1.2/spec.html#ns-plain(n,c)\n\t// This is a simplified version that doesn't support \"#\" and multiline keys\n\t// All these long scarry character classes are simplified versions of YAML's characters\n\tvar plainKey = /(?:[^\\s\\x00-\\x08\\x0e-\\x1f!\"#%&'*,\\-:>?@[\\]`{|}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]|[?:-]<PLAIN>)(?:[ \\t]*(?:(?![#:])<PLAIN>|:<PLAIN>))*/.source\n\t\t.replace(/<PLAIN>/g, function () { return /[^\\s\\x00-\\x08\\x0e-\\x1f,[\\]{}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]/.source; });\n\tvar string = /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\\\\\r\\n]|\\\\.)*'/.source;\n\n\t/**\n\t *\n\t * @param {string} value\n\t * @param {string} [flags]\n\t * @returns {RegExp}\n\t */\n\tfunction createValuePattern(value, flags) {\n\t\tflags = (flags || '').replace(/m/g, '') + 'm'; // add m flag\n\t\tvar pattern = /([:\\-,[{]\\s*(?:\\s<<prop>>[ \\t]+)?)(?:<<value>>)(?=[ \\t]*(?:$|,|\\]|\\}|(?:[\\r\\n]\\s*)?#))/.source\n\t\t\t.replace(/<<prop>>/g, function () { return properties; }).replace(/<<value>>/g, function () { return value; });\n\t\treturn RegExp(pattern, flags);\n\t}\n\n\tPrism.languages.yaml = {\n\t\t'scalar': {\n\t\t\tpattern: RegExp(/([\\-:]\\s*(?:\\s<<prop>>[ \\t]+)?[|>])[ \\t]*(?:((?:\\r?\\n|\\r)[ \\t]+)\\S[^\\r\\n]*(?:\\2[^\\r\\n]+)*)/.source\n\t\t\t\t.replace(/<<prop>>/g, function () { return properties; })),\n\t\t\tlookbehind: true,\n\t\t\talias: 'string'\n\t\t},\n\t\t'comment': /#.*/,\n\t\t'key': {\n\t\t\tpattern: RegExp(/((?:^|[:\\-,[{\\r\\n?])[ \\t]*(?:<<prop>>[ \\t]+)?)<<key>>(?=\\s*:\\s)/.source\n\t\t\t\t.replace(/<<prop>>/g, function () { return properties; })\n\t\t\t\t.replace(/<<key>>/g, function () { return '(?:' + plainKey + '|' + string + ')'; })),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\talias: 'atrule'\n\t\t},\n\t\t'directive': {\n\t\t\tpattern: /(^[ \\t]*)%.+/m,\n\t\t\tlookbehind: true,\n\t\t\talias: 'important'\n\t\t},\n\t\t'datetime': {\n\t\t\tpattern: createValuePattern(/\\d{4}-\\d\\d?-\\d\\d?(?:[tT]|[ \\t]+)\\d\\d?:\\d{2}:\\d{2}(?:\\.\\d*)?(?:[ \\t]*(?:Z|[-+]\\d\\d?(?::\\d{2})?))?|\\d{4}-\\d{2}-\\d{2}|\\d\\d?:\\d{2}(?::\\d{2}(?:\\.\\d*)?)?/.source),\n\t\t\tlookbehind: true,\n\t\t\talias: 'number'\n\t\t},\n\t\t'boolean': {\n\t\t\tpattern: createValuePattern(/false|true/.source, 'i'),\n\t\t\tlookbehind: true,\n\t\t\talias: 'important'\n\t\t},\n\t\t'null': {\n\t\t\tpattern: createValuePattern(/null|~/.source, 'i'),\n\t\t\tlookbehind: true,\n\t\t\talias: 'important'\n\t\t},\n\t\t'string': {\n\t\t\tpattern: createValuePattern(string),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t},\n\t\t'number': {\n\t\t\tpattern: createValuePattern(/[+-]?(?:0x[\\da-f]+|0o[0-7]+|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?|\\.inf|\\.nan)/.source, 'i'),\n\t\t\tlookbehind: true\n\t\t},\n\t\t'tag': tag,\n\t\t'important': anchorOrAlias,\n\t\t'punctuation': /---|[:[\\]{}\\-,|>?]|\\.\\.\\./\n\t};\n\n\tPrism.languages.yml = Prism.languages.yaml;\n\n}(Prism));\n","(function (Prism) {\n\n\t// Allow only one line break\n\tvar inner = /(?:\\\\.|[^\\\\\\n\\r]|(?:\\n|\\r\\n?)(?![\\r\\n]))/.source;\n\n\t/**\n\t * This function is intended for the creation of the bold or italic pattern.\n\t *\n\t * This also adds a lookbehind group to the given pattern to ensure that the pattern is not backslash-escaped.\n\t *\n\t * _Note:_ Keep in mind that this adds a capturing group.\n\t *\n\t * @param {string} pattern\n\t * @returns {RegExp}\n\t */\n\tfunction createInline(pattern) {\n\t\tpattern = pattern.replace(/<inner>/g, function () { return inner; });\n\t\treturn RegExp(/((?:^|[^\\\\])(?:\\\\{2})*)/.source + '(?:' + pattern + ')');\n\t}\n\n\n\tvar tableCell = /(?:\\\\.|``(?:[^`\\r\\n]|`(?!`))+``|`[^`\\r\\n]+`|[^\\\\|\\r\\n`])+/.source;\n\tvar tableRow = /\\|?__(?:\\|__)+\\|?(?:(?:\\n|\\r\\n?)|(?![\\s\\S]))/.source.replace(/__/g, function () { return tableCell; });\n\tvar tableLine = /\\|?[ \\t]*:?-{3,}:?[ \\t]*(?:\\|[ \\t]*:?-{3,}:?[ \\t]*)+\\|?(?:\\n|\\r\\n?)/.source;\n\n\n\tPrism.languages.markdown = Prism.languages.extend('markup', {});\n\tPrism.languages.insertBefore('markdown', 'prolog', {\n\t\t'front-matter-block': {\n\t\t\tpattern: /(^(?:\\s*[\\r\\n])?)---(?!.)[\\s\\S]*?[\\r\\n]---(?!.)/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'punctuation': /^---|---$/,\n\t\t\t\t'front-matter': {\n\t\t\t\t\tpattern: /\\S+(?:\\s+\\S+)*/,\n\t\t\t\t\talias: ['yaml', 'language-yaml'],\n\t\t\t\t\tinside: Prism.languages.yaml\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'blockquote': {\n\t\t\t// > ...\n\t\t\tpattern: /^>(?:[\\t ]*>)*/m,\n\t\t\talias: 'punctuation'\n\t\t},\n\t\t'table': {\n\t\t\tpattern: RegExp('^' + tableRow + tableLine + '(?:' + tableRow + ')*', 'm'),\n\t\t\tinside: {\n\t\t\t\t'table-data-rows': {\n\t\t\t\t\tpattern: RegExp('^(' + tableRow + tableLine + ')(?:' + tableRow + ')*$'),\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'table-data': {\n\t\t\t\t\t\t\tpattern: RegExp(tableCell),\n\t\t\t\t\t\t\tinside: Prism.languages.markdown\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'punctuation': /\\|/\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'table-line': {\n\t\t\t\t\tpattern: RegExp('^(' + tableRow + ')' + tableLine + '$'),\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'punctuation': /\\||:?-{3,}:?/\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'table-header-row': {\n\t\t\t\t\tpattern: RegExp('^' + tableRow + '$'),\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'table-header': {\n\t\t\t\t\t\t\tpattern: RegExp(tableCell),\n\t\t\t\t\t\t\talias: 'important',\n\t\t\t\t\t\t\tinside: Prism.languages.markdown\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'punctuation': /\\|/\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'code': [\n\t\t\t{\n\t\t\t\t// Prefixed by 4 spaces or 1 tab and preceded by an empty line\n\t\t\t\tpattern: /((?:^|\\n)[ \\t]*\\n|(?:^|\\r\\n?)[ \\t]*\\r\\n?)(?: {4}|\\t).+(?:(?:\\n|\\r\\n?)(?: {4}|\\t).+)*/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'keyword'\n\t\t\t},\n\t\t\t{\n\t\t\t\t// ```optional language\n\t\t\t\t// code block\n\t\t\t\t// ```\n\t\t\t\tpattern: /^```[\\s\\S]*?^```$/m,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'code-block': {\n\t\t\t\t\t\tpattern: /^(```.*(?:\\n|\\r\\n?))[\\s\\S]+?(?=(?:\\n|\\r\\n?)^```$)/m,\n\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t},\n\t\t\t\t\t'code-language': {\n\t\t\t\t\t\tpattern: /^(```).+/,\n\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t},\n\t\t\t\t\t'punctuation': /```/\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t'title': [\n\t\t\t{\n\t\t\t\t// title 1\n\t\t\t\t// =======\n\n\t\t\t\t// title 2\n\t\t\t\t// -------\n\t\t\t\tpattern: /\\S.*(?:\\n|\\r\\n?)(?:==+|--+)(?=[ \\t]*$)/m,\n\t\t\t\talias: 'important',\n\t\t\t\tinside: {\n\t\t\t\t\tpunctuation: /==+$|--+$/\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\t// # title 1\n\t\t\t\t// ###### title 6\n\t\t\t\tpattern: /(^\\s*)#.+/m,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'important',\n\t\t\t\tinside: {\n\t\t\t\t\tpunctuation: /^#+|#+$/\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t'hr': {\n\t\t\t// ***\n\t\t\t// ---\n\t\t\t// * * *\n\t\t\t// -----------\n\t\t\tpattern: /(^\\s*)([*-])(?:[\\t ]*\\2){2,}(?=\\s*$)/m,\n\t\t\tlookbehind: true,\n\t\t\talias: 'punctuation'\n\t\t},\n\t\t'list': {\n\t\t\t// * item\n\t\t\t// + item\n\t\t\t// - item\n\t\t\t// 1. item\n\t\t\tpattern: /(^\\s*)(?:[*+-]|\\d+\\.)(?=[\\t ].)/m,\n\t\t\tlookbehind: true,\n\t\t\talias: 'punctuation'\n\t\t},\n\t\t'url-reference': {\n\t\t\t// [id]: http://example.com \"Optional title\"\n\t\t\t// [id]: http://example.com 'Optional title'\n\t\t\t// [id]: http://example.com (Optional title)\n\t\t\t// [id]: <http://example.com> \"Optional title\"\n\t\t\tpattern: /!?\\[[^\\]]+\\]:[\\t ]+(?:\\S+|<(?:\\\\.|[^>\\\\])+>)(?:[\\t ]+(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\)))?/,\n\t\t\tinside: {\n\t\t\t\t'variable': {\n\t\t\t\t\tpattern: /^(!?\\[)[^\\]]+/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t},\n\t\t\t\t'string': /(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\))$/,\n\t\t\t\t'punctuation': /^[\\[\\]!:]|[<>]/\n\t\t\t},\n\t\t\talias: 'url'\n\t\t},\n\t\t'bold': {\n\t\t\t// **strong**\n\t\t\t// __strong__\n\n\t\t\t// allow one nested instance of italic text using the same delimiter\n\t\t\tpattern: createInline(/\\b__(?:(?!_)<inner>|_(?:(?!_)<inner>)+_)+__\\b|\\*\\*(?:(?!\\*)<inner>|\\*(?:(?!\\*)<inner>)+\\*)+\\*\\*/.source),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'content': {\n\t\t\t\t\tpattern: /(^..)[\\s\\S]+(?=..$)/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: {} // see below\n\t\t\t\t},\n\t\t\t\t'punctuation': /\\*\\*|__/\n\t\t\t}\n\t\t},\n\t\t'italic': {\n\t\t\t// *em*\n\t\t\t// _em_\n\n\t\t\t// allow one nested instance of bold text using the same delimiter\n\t\t\tpattern: createInline(/\\b_(?:(?!_)<inner>|__(?:(?!_)<inner>)+__)+_\\b|\\*(?:(?!\\*)<inner>|\\*\\*(?:(?!\\*)<inner>)+\\*\\*)+\\*/.source),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'content': {\n\t\t\t\t\tpattern: /(^.)[\\s\\S]+(?=.$)/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: {} // see below\n\t\t\t\t},\n\t\t\t\t'punctuation': /[*_]/\n\t\t\t}\n\t\t},\n\t\t'strike': {\n\t\t\t// ~~strike through~~\n\t\t\t// ~strike~\n\t\t\t// eslint-disable-next-line regexp/strict\n\t\t\tpattern: createInline(/(~~?)(?:(?!~)<inner>)+\\2/.source),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'content': {\n\t\t\t\t\tpattern: /(^~~?)[\\s\\S]+(?=\\1$)/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: {} // see below\n\t\t\t\t},\n\t\t\t\t'punctuation': /~~?/\n\t\t\t}\n\t\t},\n\t\t'code-snippet': {\n\t\t\t// `code`\n\t\t\t// ``code``\n\t\t\tpattern: /(^|[^\\\\`])(?:``[^`\\r\\n]+(?:`[^`\\r\\n]+)*``(?!`)|`[^`\\r\\n]+`(?!`))/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\talias: ['code', 'keyword']\n\t\t},\n\t\t'url': {\n\t\t\t// [example](http://example.com \"Optional title\")\n\t\t\t// [example][id]\n\t\t\t// [example] [id]\n\t\t\tpattern: createInline(/!?\\[(?:(?!\\])<inner>)+\\](?:\\([^\\s)]+(?:[\\t ]+\"(?:\\\\.|[^\"\\\\])*\")?\\)|[ \\t]?\\[(?:(?!\\])<inner>)+\\])/.source),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'operator': /^!/,\n\t\t\t\t'content': {\n\t\t\t\t\tpattern: /(^\\[)[^\\]]+(?=\\])/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: {} // see below\n\t\t\t\t},\n\t\t\t\t'variable': {\n\t\t\t\t\tpattern: /(^\\][ \\t]?\\[)[^\\]]+(?=\\]$)/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t},\n\t\t\t\t'url': {\n\t\t\t\t\tpattern: /(^\\]\\()[^\\s)]+/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t},\n\t\t\t\t'string': {\n\t\t\t\t\tpattern: /(^[ \\t]+)\"(?:\\\\.|[^\"\\\\])*\"(?=\\)$)/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\t['url', 'bold', 'italic', 'strike'].forEach(function (token) {\n\t\t['url', 'bold', 'italic', 'strike', 'code-snippet'].forEach(function (inside) {\n\t\t\tif (token !== inside) {\n\t\t\t\tPrism.languages.markdown[token].inside.content.inside[inside] = Prism.languages.markdown[inside];\n\t\t\t}\n\t\t});\n\t});\n\n\tPrism.hooks.add('after-tokenize', function (env) {\n\t\tif (env.language !== 'markdown' && env.language !== 'md') {\n\t\t\treturn;\n\t\t}\n\n\t\tfunction walkTokens(tokens) {\n\t\t\tif (!tokens || typeof tokens === 'string') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (var i = 0, l = tokens.length; i < l; i++) {\n\t\t\t\tvar token = tokens[i];\n\n\t\t\t\tif (token.type !== 'code') {\n\t\t\t\t\twalkTokens(token.content);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t/*\n\t\t\t\t * Add the correct `language-xxxx` class to this code block. Keep in mind that the `code-language` token\n\t\t\t\t * is optional. But the grammar is defined so that there is only one case we have to handle:\n\t\t\t\t *\n\t\t\t\t * token.content = [\n\t\t\t\t *     <span class=\"punctuation\">```</span>,\n\t\t\t\t *     <span class=\"code-language\">xxxx</span>,\n\t\t\t\t *     '\\n', // exactly one new lines (\\r or \\n or \\r\\n)\n\t\t\t\t *     <span class=\"code-block\">...</span>,\n\t\t\t\t *     '\\n', // exactly one new lines again\n\t\t\t\t *     <span class=\"punctuation\">```</span>\n\t\t\t\t * ];\n\t\t\t\t */\n\n\t\t\t\tvar codeLang = token.content[1];\n\t\t\t\tvar codeBlock = token.content[3];\n\n\t\t\t\tif (codeLang && codeBlock &&\n\t\t\t\t\tcodeLang.type === 'code-language' && codeBlock.type === 'code-block' &&\n\t\t\t\t\ttypeof codeLang.content === 'string') {\n\n\t\t\t\t\t// this might be a language that Prism does not support\n\n\t\t\t\t\t// do some replacements to support C++, C#, and F#\n\t\t\t\t\tvar lang = codeLang.content.replace(/\\b#/g, 'sharp').replace(/\\b\\+\\+/g, 'pp');\n\t\t\t\t\t// only use the first word\n\t\t\t\t\tlang = (/[a-z][\\w-]*/i.exec(lang) || [''])[0].toLowerCase();\n\t\t\t\t\tvar alias = 'language-' + lang;\n\n\t\t\t\t\t// add alias\n\t\t\t\t\tif (!codeBlock.alias) {\n\t\t\t\t\t\tcodeBlock.alias = [alias];\n\t\t\t\t\t} else if (typeof codeBlock.alias === 'string') {\n\t\t\t\t\t\tcodeBlock.alias = [codeBlock.alias, alias];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcodeBlock.alias.push(alias);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\twalkTokens(env.tokens);\n\t});\n\n\tPrism.hooks.add('wrap', function (env) {\n\t\tif (env.type !== 'code-block') {\n\t\t\treturn;\n\t\t}\n\n\t\tvar codeLang = '';\n\t\tfor (var i = 0, l = env.classes.length; i < l; i++) {\n\t\t\tvar cls = env.classes[i];\n\t\t\tvar match = /language-(.+)/.exec(cls);\n\t\t\tif (match) {\n\t\t\t\tcodeLang = match[1];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tvar grammar = Prism.languages[codeLang];\n\n\t\tif (!grammar) {\n\t\t\tif (codeLang && codeLang !== 'none' && Prism.plugins.autoloader) {\n\t\t\t\tvar id = 'md-' + new Date().valueOf() + '-' + Math.floor(Math.random() * 1e16);\n\t\t\t\tenv.attributes['id'] = id;\n\n\t\t\t\tPrism.plugins.autoloader.loadLanguages(codeLang, function () {\n\t\t\t\t\tvar ele = document.getElementById(id);\n\t\t\t\t\tif (ele) {\n\t\t\t\t\t\tele.innerHTML = Prism.highlight(ele.textContent, Prism.languages[codeLang], codeLang);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tenv.content = Prism.highlight(textContent(env.content), grammar, codeLang);\n\t\t}\n\t});\n\n\tvar tagPattern = RegExp(Prism.languages.markup.tag.pattern.source, 'gi');\n\n\t/**\n\t * A list of known entity names.\n\t *\n\t * This will always be incomplete to save space. The current list is the one used by lowdash's unescape function.\n\t *\n\t * @see {@link https://github.com/lodash/lodash/blob/2da024c3b4f9947a48517639de7560457cd4ec6c/unescape.js#L2}\n\t */\n\tvar KNOWN_ENTITY_NAMES = {\n\t\t'amp': '&',\n\t\t'lt': '<',\n\t\t'gt': '>',\n\t\t'quot': '\"',\n\t};\n\n\t// IE 11 doesn't support `String.fromCodePoint`\n\tvar fromCodePoint = String.fromCodePoint || String.fromCharCode;\n\n\t/**\n\t * Returns the text content of a given HTML source code string.\n\t *\n\t * @param {string} html\n\t * @returns {string}\n\t */\n\tfunction textContent(html) {\n\t\t// remove all tags\n\t\tvar text = html.replace(tagPattern, '');\n\n\t\t// decode known entities\n\t\ttext = text.replace(/&(\\w{1,8}|#x?[\\da-f]{1,8});/gi, function (m, code) {\n\t\t\tcode = code.toLowerCase();\n\n\t\t\tif (code[0] === '#') {\n\t\t\t\tvar value;\n\t\t\t\tif (code[1] === 'x') {\n\t\t\t\t\tvalue = parseInt(code.slice(2), 16);\n\t\t\t\t} else {\n\t\t\t\t\tvalue = Number(code.slice(1));\n\t\t\t\t}\n\n\t\t\t\treturn fromCodePoint(value);\n\t\t\t} else {\n\t\t\t\tvar known = KNOWN_ENTITY_NAMES[code];\n\t\t\t\tif (known) {\n\t\t\t\t\treturn known;\n\t\t\t\t}\n\n\t\t\t\t// unable to decode\n\t\t\t\treturn m;\n\t\t\t}\n\t\t});\n\n\t\treturn text;\n\t}\n\n\tPrism.languages.md = Prism.languages.markdown;\n\n}(Prism));\n","(function () {\n\n\tif (typeof Prism === 'undefined' || typeof document === 'undefined') {\n\t\treturn;\n\t}\n\n\t/**\n\t * Plugin name which is used as a class name for <pre> which is activating the plugin\n\t *\n\t * @type {string}\n\t */\n\tvar PLUGIN_NAME = 'line-numbers';\n\n\t/**\n\t * Regular expression used for determining line breaks\n\t *\n\t * @type {RegExp}\n\t */\n\tvar NEW_LINE_EXP = /\\n(?!$)/g;\n\n\n\t/**\n\t * Global exports\n\t */\n\tvar config = Prism.plugins.lineNumbers = {\n\t\t/**\n\t\t * Get node for provided line number\n\t\t *\n\t\t * @param {Element} element pre element\n\t\t * @param {number} number line number\n\t\t * @returns {Element|undefined}\n\t\t */\n\t\tgetLine: function (element, number) {\n\t\t\tif (element.tagName !== 'PRE' || !element.classList.contains(PLUGIN_NAME)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar lineNumberRows = element.querySelector('.line-numbers-rows');\n\t\t\tif (!lineNumberRows) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar lineNumberStart = parseInt(element.getAttribute('data-start'), 10) || 1;\n\t\t\tvar lineNumberEnd = lineNumberStart + (lineNumberRows.children.length - 1);\n\n\t\t\tif (number < lineNumberStart) {\n\t\t\t\tnumber = lineNumberStart;\n\t\t\t}\n\t\t\tif (number > lineNumberEnd) {\n\t\t\t\tnumber = lineNumberEnd;\n\t\t\t}\n\n\t\t\tvar lineIndex = number - lineNumberStart;\n\n\t\t\treturn lineNumberRows.children[lineIndex];\n\t\t},\n\n\t\t/**\n\t\t * Resizes the line numbers of the given element.\n\t\t *\n\t\t * This function will not add line numbers. It will only resize existing ones.\n\t\t *\n\t\t * @param {HTMLElement} element A `<pre>` element with line numbers.\n\t\t * @returns {void}\n\t\t */\n\t\tresize: function (element) {\n\t\t\tresizeElements([element]);\n\t\t},\n\n\t\t/**\n\t\t * Whether the plugin can assume that the units font sizes and margins are not depended on the size of\n\t\t * the current viewport.\n\t\t *\n\t\t * Setting this to `true` will allow the plugin to do certain optimizations for better performance.\n\t\t *\n\t\t * Set this to `false` if you use any of the following CSS units: `vh`, `vw`, `vmin`, `vmax`.\n\t\t *\n\t\t * @type {boolean}\n\t\t */\n\t\tassumeViewportIndependence: true\n\t};\n\n\t/**\n\t * Resizes the given elements.\n\t *\n\t * @param {HTMLElement[]} elements\n\t */\n\tfunction resizeElements(elements) {\n\t\telements = elements.filter(function (e) {\n\t\t\tvar codeStyles = getStyles(e);\n\t\t\tvar whiteSpace = codeStyles['white-space'];\n\t\t\treturn whiteSpace === 'pre-wrap' || whiteSpace === 'pre-line';\n\t\t});\n\n\t\tif (elements.length == 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar infos = elements.map(function (element) {\n\t\t\tvar codeElement = element.querySelector('code');\n\t\t\tvar lineNumbersWrapper = element.querySelector('.line-numbers-rows');\n\t\t\tif (!codeElement || !lineNumbersWrapper) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\t/** @type {HTMLElement} */\n\t\t\tvar lineNumberSizer = element.querySelector('.line-numbers-sizer');\n\t\t\tvar codeLines = codeElement.textContent.split(NEW_LINE_EXP);\n\n\t\t\tif (!lineNumberSizer) {\n\t\t\t\tlineNumberSizer = document.createElement('span');\n\t\t\t\tlineNumberSizer.className = 'line-numbers-sizer';\n\n\t\t\t\tcodeElement.appendChild(lineNumberSizer);\n\t\t\t}\n\n\t\t\tlineNumberSizer.innerHTML = '0';\n\t\t\tlineNumberSizer.style.display = 'block';\n\n\t\t\tvar oneLinerHeight = lineNumberSizer.getBoundingClientRect().height;\n\t\t\tlineNumberSizer.innerHTML = '';\n\n\t\t\treturn {\n\t\t\t\telement: element,\n\t\t\t\tlines: codeLines,\n\t\t\t\tlineHeights: [],\n\t\t\t\toneLinerHeight: oneLinerHeight,\n\t\t\t\tsizer: lineNumberSizer,\n\t\t\t};\n\t\t}).filter(Boolean);\n\n\t\tinfos.forEach(function (info) {\n\t\t\tvar lineNumberSizer = info.sizer;\n\t\t\tvar lines = info.lines;\n\t\t\tvar lineHeights = info.lineHeights;\n\t\t\tvar oneLinerHeight = info.oneLinerHeight;\n\n\t\t\tlineHeights[lines.length - 1] = undefined;\n\t\t\tlines.forEach(function (line, index) {\n\t\t\t\tif (line && line.length > 1) {\n\t\t\t\t\tvar e = lineNumberSizer.appendChild(document.createElement('span'));\n\t\t\t\t\te.style.display = 'block';\n\t\t\t\t\te.textContent = line;\n\t\t\t\t} else {\n\t\t\t\t\tlineHeights[index] = oneLinerHeight;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\tinfos.forEach(function (info) {\n\t\t\tvar lineNumberSizer = info.sizer;\n\t\t\tvar lineHeights = info.lineHeights;\n\n\t\t\tvar childIndex = 0;\n\t\t\tfor (var i = 0; i < lineHeights.length; i++) {\n\t\t\t\tif (lineHeights[i] === undefined) {\n\t\t\t\t\tlineHeights[i] = lineNumberSizer.children[childIndex++].getBoundingClientRect().height;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tinfos.forEach(function (info) {\n\t\t\tvar lineNumberSizer = info.sizer;\n\t\t\tvar wrapper = info.element.querySelector('.line-numbers-rows');\n\n\t\t\tlineNumberSizer.style.display = 'none';\n\t\t\tlineNumberSizer.innerHTML = '';\n\n\t\t\tinfo.lineHeights.forEach(function (height, lineNumber) {\n\t\t\t\twrapper.children[lineNumber].style.height = height + 'px';\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Returns style declarations for the element\n\t *\n\t * @param {Element} element\n\t */\n\tfunction getStyles(element) {\n\t\tif (!element) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn window.getComputedStyle ? getComputedStyle(element) : (element.currentStyle || null);\n\t}\n\n\tvar lastWidth = undefined;\n\twindow.addEventListener('resize', function () {\n\t\tif (config.assumeViewportIndependence && lastWidth === window.innerWidth) {\n\t\t\treturn;\n\t\t}\n\t\tlastWidth = window.innerWidth;\n\n\t\tresizeElements(Array.prototype.slice.call(document.querySelectorAll('pre.' + PLUGIN_NAME)));\n\t});\n\n\tPrism.hooks.add('complete', function (env) {\n\t\tif (!env.code) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar code = /** @type {Element} */ (env.element);\n\t\tvar pre = /** @type {HTMLElement} */ (code.parentNode);\n\n\t\t// works only for <code> wrapped inside <pre> (not inline)\n\t\tif (!pre || !/pre/i.test(pre.nodeName)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Abort if line numbers already exists\n\t\tif (code.querySelector('.line-numbers-rows')) {\n\t\t\treturn;\n\t\t}\n\n\t\t// only add line numbers if <code> or one of its ancestors has the `line-numbers` class\n\t\tif (!Prism.util.isActive(code, PLUGIN_NAME)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Remove the class 'line-numbers' from the <code>\n\t\tcode.classList.remove(PLUGIN_NAME);\n\t\t// Add the class 'line-numbers' to the <pre>\n\t\tpre.classList.add(PLUGIN_NAME);\n\n\t\tvar match = env.code.match(NEW_LINE_EXP);\n\t\tvar linesNum = match ? match.length + 1 : 1;\n\t\tvar lineNumbersWrapper;\n\n\t\tvar lines = new Array(linesNum + 1).join('<span></span>');\n\n\t\tlineNumbersWrapper = document.createElement('span');\n\t\tlineNumbersWrapper.setAttribute('aria-hidden', 'true');\n\t\tlineNumbersWrapper.className = 'line-numbers-rows';\n\t\tlineNumbersWrapper.innerHTML = lines;\n\n\t\tif (pre.hasAttribute('data-start')) {\n\t\t\tpre.style.counterReset = 'linenumber ' + (parseInt(pre.getAttribute('data-start'), 10) - 1);\n\t\t}\n\n\t\tenv.element.appendChild(lineNumbersWrapper);\n\n\t\tresizeElements([pre]);\n\n\t\tPrism.hooks.run('line-numbers', env);\n\t});\n\n\tPrism.hooks.add('line-numbers', function (env) {\n\t\tenv.plugins = env.plugins || {};\n\t\tenv.plugins.lineNumbers = true;\n\t});\n\n}());\n","import Layout from './Layout'; // Import the Layout component\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Code, Info, ArrowLeft, Copy, Check, RefreshCw, FileText, Download, Upload } from 'lucide-react';\nimport Prism from 'prismjs';\nimport 'prismjs/themes/prism-tomorrow.css';\nimport 'prismjs/components/prism-markup';\nimport 'prismjs/components/prism-css';\nimport 'prismjs/components/prism-javascript';\nimport 'prismjs/components/prism-jsx';\nimport 'prismjs/components/prism-typescript';\nimport 'prismjs/components/prism-json';\nimport 'prismjs/components/prism-python';\nimport 'prismjs/components/prism-sql';\nimport 'prismjs/components/prism-yaml';\nimport 'prismjs/components/prism-markdown';\nimport 'prismjs/plugins/line-numbers/prism-line-numbers.css';\nimport 'prismjs/plugins/line-numbers/prism-line-numbers';\n\nfunction CodeFormatter() {\n  const [code, setCode] = useState('');\n  const [formattedCode, setFormattedCode] = useState('');\n  const [language, setLanguage] = useState('html');\n  const [isFormatting, setIsFormatting] = useState(false);\n  const [error, setError] = useState('');\n  const [copied, setCopied] = useState(false);\n  const [selectedTab, setSelectedTab] = useState('input'); // 'input' or 'output'\n\n  // Language options\n  const languageOptions = [\n    { value: 'html', label: 'HTML' },\n    { value: 'css', label: 'CSS' },\n    { value: 'javascript', label: 'JavaScript' },\n    { value: 'jsx', label: 'JSX/React' },\n    { value: 'typescript', label: 'TypeScript' },\n    { value: 'json', label: 'JSON' },\n    { value: 'markdown', label: 'Markdown' },\n    { value: 'yaml', label: 'YAML' },\n    { value: 'python', label: 'Python' },\n    { value: 'sql', label: 'SQL' }\n  ];\n\n  // Initialize Prism syntax highlighting\n  useEffect(() => {\n    if (formattedCode) {\n      Prism.highlightAll();\n    }\n  }, [formattedCode, selectedTab]);\n\n  // Basic formatting for different languages\n  const simpleFormat = (input, lang) => {\n    if (!input.trim()) return '';\n\n    try {\n      switch (lang) {\n        case 'html':\n          return formatHTML(input);\n        case 'css':\n          return formatCSS(input);\n        case 'javascript':\n        case 'jsx':\n          return formatJS(input);\n        case 'json':\n          return formatJSON(input);\n        default:\n          // For other languages, just return the input with consistent line breaks\n          return input.replace(/\\r\\n/g, '\\n');\n      }\n    } catch (err) {\n      console.error(`Error formatting ${lang}:`, err);\n      return input; // Return original in case of error\n    }\n  };\n\n  // Improved HTML formatter\n  const formatHTML = (html) => {\n    // First, normalize line endings and remove extra whitespace\n    html = html.replace(/\\r\\n/g, '\\n')\n      .replace(/^\\s+|\\s+$/g, '')\n      .replace(/\\s+</g, '<')\n      .replace(/>\\s+/g, '>');\n\n    // Insert line breaks between tags to prepare for formatting\n    html = html.replace(/>\\s*</g, '>\\n<');\n\n    // Handle special cases for preserving content in certain tags\n    html = html.replace(/(<(script|style|pre)[^>]*>)(.*?)(<\\/\\2>)/gs, (match, startTag, tagName, content, endTag) => {\n      // Preserve content in script/style/pre tags but add line breaks around them\n      return `${startTag}\\n${content}\\n${endTag}`;\n    });\n\n    // Split into lines for indentation\n    const lines = html.split('\\n');\n    let formatted = '';\n    let indent = 0;\n    const indentSize = 2;\n\n    // Self-closing tags pattern\n    const selfClosingTags = /^<(area|base|br|col|embed|hr|img|input|link|meta|param|source|track|wbr).*?\\/?>$/i;\n\n    // Doctype and comments pattern\n    const doctypeOrComment = /^<!.*?>$/;\n\n    for (let i = 0; i < lines.length; i++) {\n      let line = lines[i].trim();\n      if (!line) continue;\n\n      // Handle doctype and comments - no indent change\n      if (doctypeOrComment.test(line)) {\n        formatted += ' '.repeat(indent) + line + '\\n';\n        continue;\n      }\n\n      // Check if this line is a closing tag\n      if (line.startsWith('</')) {\n        indent -= indentSize;\n        if (indent < 0) indent = 0; // Prevent negative indentation\n        formatted += ' '.repeat(indent) + line + '\\n';\n        continue;\n      }\n\n      // Check if this line is an opening tag (not self-closing)\n      if (line.startsWith('<') && !line.includes('</') && !selfClosingTags.test(line)) {\n        formatted += ' '.repeat(indent) + line + '\\n';\n        if (!line.endsWith('/>')) {\n          indent += indentSize;\n        }\n        continue;\n      }\n\n      // Self-closing or inline elements\n      formatted += ' '.repeat(indent) + line + '\\n';\n    }\n\n    return formatted;\n  };\n\n  // Basic CSS formatting\n  const formatCSS = (css) => {\n    // Remove extra whitespace\n    css = css.replace(/\\s+/g, ' ').replace(/\\s*([{}:;,])\\s*/g, '$1');\n    // Add line breaks and indentation\n    css = css.replace(/}/g, '}\\n').replace(/{/g, ' {\\n  ').replace(/;/g, ';\\n  ');\n    // Fix indentation after closing braces\n    css = css.replace(/\\n\\s*}/g, '\\n}');\n    return css;\n  };\n\n  // Basic JavaScript formatting\n  const formatJS = (js) => {\n    let formatted = '';\n    let indent = 0;\n    const indentSize = 2;\n\n    // Replace multiple spaces with a single space\n    js = js.replace(/\\s+/g, ' ').trim();\n\n    // Add newlines after key punctuation\n    js = js.replace(/([;{}])/g, '$1\\n');\n\n    // Handle special cases for nested structures\n    js = js.replace(/\\) {/g, ') {\\n');\n\n    const lines = js.split('\\n');\n\n    for (let i = 0; i < lines.length; i++) {\n      let line = lines[i].trim();\n      if (!line) continue;\n\n      // Decrease indent for closing braces\n      if (line.startsWith('}')) {\n        indent -= indentSize;\n        if (indent < 0) indent = 0;\n      }\n\n      // Add indentation\n      formatted += ' '.repeat(indent) + line + '\\n';\n\n      // Increase indent for opening braces\n      if (line.includes('{') && !line.includes('}')) {\n        indent += indentSize;\n      }\n    }\n\n    return formatted;\n  };\n\n  // Format JSON\n  const formatJSON = (json) => {\n    try {\n      const obj = JSON.parse(json);\n      return JSON.stringify(obj, null, 2);\n    } catch (err) {\n      throw new Error('Invalid JSON: ' + err.message);\n    }\n  };\n\n  // Format code function\n  const formatCode = async () => {\n    if (!code.trim()) {\n      setError('Please enter some code to format.');\n      return;\n    }\n\n    setIsFormatting(true);\n    setError('');\n\n    try {\n      // Simple built-in formatter\n      const formattedResult = simpleFormat(code, language);\n      setFormattedCode(formattedResult);\n      setSelectedTab('output');\n    } catch (err) {\n      console.error('Formatting error:', err);\n      setError(`An error occurred: ${err.message}`);\n    } finally {\n      setIsFormatting(false);\n    }\n  };\n\n  // Clear code\n  const clearCode = () => {\n    setCode('');\n    setFormattedCode('');\n    setError('');\n    setCopied(false);\n    setSelectedTab('input');\n  };\n\n  // Copy formatted code to clipboard\n  const copyToClipboard = () => {\n    if (!formattedCode) return;\n\n    navigator.clipboard.writeText(formattedCode)\n      .then(() => {\n        setCopied(true);\n        setTimeout(() => setCopied(false), 2000);\n      })\n      .catch(err => {\n        console.error('Failed to copy text: ', err);\n        setError('Failed to copy to clipboard');\n      });\n  };\n\n  // Download formatted code\n  const downloadCode = () => {\n    if (!formattedCode) return;\n\n    const fileExtension = language === 'jsx' ? 'jsx' : language;\n    const fileName = `formatted-code.${fileExtension}`;\n    const blob = new Blob([formattedCode], { type: 'text/plain' });\n    const url = URL.createObjectURL(blob);\n\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = fileName;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    URL.revokeObjectURL(url);\n  };\n\n  // Handle file upload\n  const handleFileUpload = (event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n\n    // Try to detect language from file extension\n    const fileExtension = file.name.split('.').pop().toLowerCase();\n    const mappings = {\n      'html': 'html',\n      'htm': 'html',\n      'css': 'css',\n      'js': 'javascript',\n      'jsx': 'jsx',\n      'ts': 'typescript',\n      'tsx': 'typescript',\n      'json': 'json',\n      'md': 'markdown',\n      'yaml': 'yaml',\n      'yml': 'yaml',\n      'py': 'python',\n      'sql': 'sql'\n    };\n\n    if (mappings[fileExtension]) {\n      setLanguage(mappings[fileExtension]);\n    }\n\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      setCode(e.target.result);\n      setFormattedCode('');\n      setSelectedTab('input');\n    };\n    reader.onerror = () => {\n      setError('Error reading file');\n    };\n    reader.readAsText(file);\n  };\n\n  // Create description element for the Layout\n  const descriptionElement = (\n    <div className=\"info-box\">\n      <Info size={20} />\n      <p>\n        Instantly format and beautify your code with support for HTML, CSS, JavaScript, and more.\n        No server processing - all formatting happens locally in your browser.\n      </p>\n    </div>\n  );\n\n  return (\n    <Layout\n      title=\"Code Formatter & Beautifier\"\n      description={descriptionElement}\n    >\n\n      <div className=\"formatter-container\">\n        <div className=\"formatter-header\">\n          <div className=\"language-selector\">\n            <label htmlFor=\"language-select\">Language:</label>\n            <select\n              id=\"language-select\"\n              value={language}\n              onChange={(e) => setLanguage(e.target.value)}\n              className=\"language-select\"\n            >\n              {languageOptions.map(option => (\n                <option key={option.value} value={option.value}>\n                  {option.label}\n                </option>\n              ))}\n            </select>\n          </div>\n\n          <div className=\"formatter-actions\">\n            <label className=\"file-upload-button\">\n              <Upload size={16} />\n              <span>Upload File</span>\n              <input\n                type=\"file\"\n                onChange={handleFileUpload}\n                className=\"hidden-file-input\"\n              />\n            </label>\n\n            <button\n              onClick={clearCode}\n              className=\"clear-button\"\n              disabled={!code && !formattedCode}\n            >\n              <RefreshCw size={16} />\n              <span>Clear</span>\n            </button>\n          </div>\n        </div>\n\n        <div className=\"formatter-tabs\">\n          <button\n            className={`tab-button ${selectedTab === 'input' ? 'active' : ''}`}\n            onClick={() => setSelectedTab('input')}\n          >\n            <FileText size={16} />\n            <span>Input</span>\n          </button>\n          <button\n            className={`tab-button ${selectedTab === 'output' ? 'active' : ''}`}\n            onClick={() => setSelectedTab('output')}\n            disabled={!formattedCode}\n          >\n            <Code size={16} />\n            <span>Output</span>\n          </button>\n        </div>\n\n        <div className=\"formatter-editor\">\n          {selectedTab === 'input' ? (\n            // Input Editor\n            <div className=\"code-input-container\">\n              <textarea\n                className=\"code-input\"\n                value={code}\n                onChange={(e) => setCode(e.target.value)}\n                placeholder={`Paste your ${languageOptions.find(l => l.value === language)?.label || 'code'} here...`}\n                spellCheck=\"false\"\n              />\n              <div className=\"format-button-container\">\n                <button\n                  onClick={formatCode}\n                  disabled={!code || isFormatting}\n                  className=\"format-button\"\n                >\n                  {isFormatting ? 'Formatting...' : 'Format Code'}\n                </button>\n              </div>\n            </div>\n          ) : (\n            // Output Editor with Syntax Highlighting\n            <div className=\"code-output-container\">\n              <div className=\"output-actions\">\n                <button\n                  onClick={copyToClipboard}\n                  className=\"copy-button\"\n                  disabled={!formattedCode}\n                >\n                  {copied ? (\n                    <>\n                      <Check size={16} />\n                      <span>Copied!</span>\n                    </>\n                  ) : (\n                    <>\n                      <Copy size={16} />\n                      <span>Copy Code</span>\n                    </>\n                  )}\n                </button>\n                <button\n                  onClick={downloadCode}\n                  className=\"download-button\"\n                  disabled={!formattedCode}\n                >\n                  <Download size={16} />\n                  <span>Download</span>\n                </button>\n              </div>\n              <pre className=\"line-numbers language-${language}\">\n                <code className={`language-${language}`}>\n                  {formattedCode}\n                </code>\n              </pre>\n            </div>\n          )}\n        </div>\n\n        {error && (\n          <div className={`formatter-message ${error.startsWith('Note:') ? 'info' : 'error'}`}>\n            {error}\n          </div>\n        )}\n      </div>\n    </Layout>\n  );\n}\n\nexport default CodeFormatter;\n"],"names":["env","tagName","lang","includedCdataInside","inside","def","attrName","Prism","string","markup","javascript","space","braces","spread","re","source","flags","stringifyToken","token","walkTokens","tokens","openedTags","i","notTagNorBrace","plainText","typeInside","anchorOrAlias","tag","properties","plainKey","createValuePattern","value","pattern","inner","createInline","tableCell","tableRow","tableLine","l","codeLang","codeBlock","alias","cls","match","grammar","textContent","id","ele","tagPattern","KNOWN_ENTITY_NAMES","fromCodePoint","html","text","m","code","known","PLUGIN_NAME","NEW_LINE_EXP","config","element","number","lineNumberRows","lineNumberStart","lineNumberEnd","lineIndex","resizeElements","elements","e","codeStyles","getStyles","whiteSpace","infos","codeElement","lineNumbersWrapper","lineNumberSizer","codeLines","oneLinerHeight","info","lines","lineHeights","line","index","childIndex","wrapper","height","lineNumber","lastWidth","pre","linesNum","CodeFormatter","setCode","useState","formattedCode","setFormattedCode","language","setLanguage","isFormatting","setIsFormatting","error","setError","copied","setCopied","selectedTab","setSelectedTab","languageOptions","useEffect","simpleFormat","input","formatHTML","formatCSS","formatJS","formatJSON","err","startTag","content","endTag","formatted","indent","indentSize","selfClosingTags","doctypeOrComment","css","js","json","obj","formatCode","formattedResult","clearCode","copyToClipboard","downloadCode","fileName","blob","url","link","handleFileUpload","event","file","fileExtension","mappings","reader","descriptionElement","jsxs","jsx","Info","Layout","option","Upload","RefreshCw","FileText","Code","_a","Fragment","Check","Copy","Download"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10]}