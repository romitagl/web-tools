{"version":3,"file":"Base64Tool-DmMWwYEi.js","sources":["../../src/components/Base64Tool.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { \n  FileCode, Info, Copy, Check, Download, RefreshCw, \n  Upload, AlertCircle, ArrowUpDown\n} from 'lucide-react';\nimport Layout from './Layout';\n\nfunction Base64Tool() {\n  const [mode, setMode] = useState('encode'); // 'encode' or 'decode'\n  const [input, setInput] = useState('');\n  const [output, setOutput] = useState('');\n  const [error, setError] = useState('');\n  const [inputFileName, setInputFileName] = useState('');\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [copied, setCopied] = useState(false);\n  const [stats, setStats] = useState({ inputSize: 0, outputSize: 0, ratio: 0 });\n\n  // Process input when it changes\n  useEffect(() => {\n    if (input) {\n      processInput();\n    } else {\n      setOutput('');\n      setStats({ inputSize: 0, outputSize: 0, ratio: 0 });\n    }\n  }, [input, mode]);\n\n  // Process the input based on the current mode\n  const processInput = () => {\n    setIsProcessing(true);\n    setError('');\n    \n    try {\n      if (mode === 'encode') {\n        // Encode to Base64\n        const encoded = btoa(unescape(encodeURIComponent(input)));\n        setOutput(encoded);\n        \n        // Calculate stats\n        const inputBytes = new Blob([input]).size;\n        const outputBytes = new Blob([encoded]).size;\n        setStats({\n          inputSize: inputBytes,\n          outputSize: outputBytes,\n          ratio: outputBytes / inputBytes\n        });\n      } else {\n        // Decode from Base64\n        // Check if input is valid Base64\n        if (!/^[A-Za-z0-9+/=]+$/.test(input.trim())) {\n          throw new Error('Invalid Base64 format. Base64 strings only contain A-Z, a-z, 0-9, +, /, and =');\n        }\n        \n        const decoded = decodeURIComponent(escape(atob(input.trim())));\n        setOutput(decoded);\n        \n        // Calculate stats\n        const inputBytes = new Blob([input]).size;\n        const outputBytes = new Blob([decoded]).size;\n        setStats({\n          inputSize: inputBytes,\n          outputSize: outputBytes,\n          ratio: outputBytes / inputBytes\n        });\n      }\n    } catch (err) {\n      console.error('Error processing:', err);\n      setError(err.message || 'An error occurred while processing the input');\n      setOutput('');\n      setStats({ inputSize: 0, outputSize: 0, ratio: 0 });\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  // Clear all input and output\n  const clearAll = () => {\n    setInput('');\n    setOutput('');\n    setInputFileName('');\n    setError('');\n    setCopied(false);\n    setStats({ inputSize: 0, outputSize: 0, ratio: 0 });\n  };\n\n  // Swap input and output\n  const swapInputOutput = () => {\n    if (!output) return;\n    \n    setInput(output);\n    setMode(mode === 'encode' ? 'decode' : 'encode');\n    // The useEffect will handle updating the output\n  };\n\n  // Copy output to clipboard\n  const copyToClipboard = () => {\n    if (!output) return;\n    \n    navigator.clipboard.writeText(output)\n      .then(() => {\n        setCopied(true);\n        setTimeout(() => setCopied(false), 2000);\n      })\n      .catch(err => {\n        console.error('Failed to copy text: ', err);\n        setError('Failed to copy to clipboard');\n      });\n  };\n\n  // Download output as a file\n  const downloadOutput = () => {\n    if (!output) return;\n    \n    const filename = mode === 'encode' \n      ? `${inputFileName || 'encoded'}.base64.txt` \n      : `${inputFileName || 'decoded'}.txt`;\n    \n    const blob = new Blob([output], { type: 'text/plain' });\n    const url = URL.createObjectURL(blob);\n    \n    const link = document.createElement('a');\n    link.href = url;\n    link.download = filename;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    URL.revokeObjectURL(url);\n  };\n\n  // Handle file upload\n  const handleFileUpload = (event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n    \n    setInputFileName(file.name.replace(/\\.[^/.]+$/, \"\")); // Remove extension\n    \n    const reader = new FileReader();\n    reader.onload = (e) => {\n      if (mode === 'encode') {\n        // For encoding text files, read as text\n        setInput(e.target.result);\n      } else {\n        // For decoding Base64, read as text\n        setInput(e.target.result);\n      }\n    };\n    reader.onerror = () => {\n      setError('Error reading file');\n    };\n    \n    // Read as text for both encoding and decoding text\n    reader.readAsText(file);\n  };\n\n  // Format byte size to human-readable format\n  const formatBytes = (bytes, decimals = 2) => {\n    if (bytes === 0) return '0 Bytes';\n    \n    const k = 1024;\n    const dm = decimals < 0 ? 0 : decimals;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n    \n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    \n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n  };\n\n  // Description for Layout component\n  const descriptionElement = (\n    <div className=\"info-banner\">\n      <div className=\"info-icon\">\n        <Info size={20} />\n      </div>\n      <div className=\"info-content\">\n        Encode text to Base64 or decode Base64 to text. All processing happens locally in your browser - no data is sent to any server.\n      </div>\n    </div>\n  );\n\n  return (\n    <Layout \n      title=\"Base64 Encoder/Decoder\"\n      description={descriptionElement}\n    >\n      <div className=\"base64-container\">\n        <div className=\"mode-toggle\">\n          <button \n            className={`mode-button ${mode === 'encode' ? 'active' : ''}`} \n            onClick={() => setMode('encode')}\n          >\n            Encode to Base64\n          </button>\n          <button \n            className={`mode-button ${mode === 'decode' ? 'active' : ''}`} \n            onClick={() => setMode('decode')}\n          >\n            Decode from Base64\n          </button>\n        </div>\n        \n        <div className=\"input-container\">\n          <div className=\"input-header\">\n            <h3>{mode === 'encode' ? 'Text to Encode' : 'Base64 to Decode'}</h3>\n            <div className=\"input-actions\">\n              <label className=\"file-upload-button\">\n                <Upload size={16} />\n                <span>Upload File</span>\n                <input \n                  type=\"file\" \n                  onChange={handleFileUpload} \n                  className=\"hidden-file-input\" \n                  accept={mode === 'encode' ? \".txt\" : \".txt,.base64,.b64\"}\n                />\n              </label>\n              \n              <button \n                onClick={clearAll} \n                className=\"clear-button\" \n                disabled={!input && !output}\n              >\n                <RefreshCw size={16} />\n                <span>Clear</span>\n              </button>\n            </div>\n          </div>\n          \n          <textarea\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            placeholder={mode === 'encode' \n              ? \"Enter text to encode to Base64...\" \n              : \"Enter Base64 to decode...\"}\n            className=\"text-input\"\n          />\n          \n          {error && (\n            <div className=\"error-message\">\n              <AlertCircle size={16} />\n              <span>{error}</span>\n            </div>\n          )}\n        </div>\n        \n        <div className=\"swap-container\">\n          <button \n            className=\"swap-button\" \n            onClick={swapInputOutput}\n            disabled={!output}\n          >\n            <ArrowUpDown size={20} />\n            <span>Swap</span>\n          </button>\n        </div>\n        \n        <div className=\"output-container\">\n          <div className=\"output-header\">\n            <h3>{mode === 'encode' ? 'Base64 Output' : 'Decoded Text'}</h3>\n            <div className=\"output-actions\">\n              <button \n                onClick={copyToClipboard} \n                className={`action-button copy-button ${copied ? 'copied' : ''}`}\n                disabled={!output}\n              >\n                {copied ? (\n                  <>\n                    <Check size={16} />\n                    <span>Copied!</span>\n                  </>\n                ) : (\n                  <>\n                    <Copy size={16} />\n                    <span>Copy</span>\n                  </>\n                )}\n              </button>\n              \n              <button \n                onClick={downloadOutput} \n                className=\"action-button download-button\" \n                disabled={!output}\n              >\n                <Download size={16} />\n                <span>Download</span>\n              </button>\n            </div>\n          </div>\n          \n          <textarea\n            value={output}\n            readOnly\n            className=\"text-output\"\n            placeholder={mode === 'encode' \n              ? \"Encoded Base64 will appear here...\" \n              : \"Decoded text will appear here...\"}\n          />\n          \n          {output && (\n            <div className=\"stats-container\">\n              <div className=\"stats-item\">\n                <span className=\"stats-label\">Input Size:</span>\n                <span className=\"stats-value\">{formatBytes(stats.inputSize)}</span>\n              </div>\n              <div className=\"stats-item\">\n                <span className=\"stats-label\">Output Size:</span>\n                <span className=\"stats-value\">{formatBytes(stats.outputSize)}</span>\n              </div>\n              <div className=\"stats-item\">\n                <span className=\"stats-label\">Size Ratio:</span>\n                <span className=\"stats-value\">{stats.ratio.toFixed(2)}x</span>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n      \n      <div className=\"info-section\">\n        <h3>About Base64 Encoding</h3>\n        <p>\n          Base64 is a binary-to-text encoding scheme that represents binary data in an ASCII string format by translating it into a radix-64 representation. \n          It's commonly used when there's a need to encode binary data that needs to be stored and transferred over media that are designed to deal with text.\n        </p>\n        <h4>Common Uses:</h4>\n        <ul>\n          <li>Embedding binary data in text formats like HTML, CSS, JSON, XML</li>\n          <li>Email attachments (MIME format)</li>\n          <li>Storing complex data in JSON strings</li>\n          <li>Data URIs in web browsers</li>\n          <li>Avoiding character encoding issues when transferring data</li>\n        </ul>\n        <div className=\"note\">\n          <strong>Note:</strong> Base64 encoding increases the data size by approximately 33% (a ratio of 4:3) compared to the original data.\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nexport default Base64Tool;"],"names":["Base64Tool","mode","setMode","useState","input","setInput","output","setOutput","error","setError","inputFileName","setInputFileName","isProcessing","setIsProcessing","copied","setCopied","stats","setStats","useEffect","processInput","encoded","inputBytes","outputBytes","decoded","err","clearAll","swapInputOutput","copyToClipboard","downloadOutput","filename","blob","url","link","handleFileUpload","event","file","reader","e","formatBytes","bytes","decimals","k","dm","sizes","i","descriptionElement","jsxs","jsx","Info","Layout","Upload","RefreshCw","AlertCircle","ArrowUpDown","Fragment","Check","Copy","Download"],"mappings":"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"}